q4()
source("quiz4.R")
q4()
mod = train(CompressiveStrength~., data=training, method = "svm")
library(caret)
mod = train(CompressiveStrength~., data=training, method = "svm")
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
# Answer begins from here
set.seed(325)
mod = train(CompressiveStrength~., data=training, method = "svm")
library(e1071)
?e1071
?svm
mod = svm(CompressiveStrength~., data=training)
pred = predict(mod,testing)
pred
rmse = sum((testing$CompressiveStrength-pred)^2)/length(pred)
rmse
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
# Answer begins from here
set.seed(325)
library(e1071)
mod = svm(CompressiveStrength~., data=training)
pred = predict(mod,testing)
accSvm <- accuracy(predSvm, testing$CompressiveStrength)
data.frame(accSvm)["RMSE"]
acc <- accuracy(pred, testing$CompressiveStrength)
data.frame(acc)["RMSE"]
setwd("Project")
main = read.csv("pml-training.csv")
training = main
names(training)
dim(training)
trn = main
unique(trn$user_name)
length(unique(trn$user_name))
library(caret)
nsv = nearZeroVar(trn,saveMetrics = TRUE)
str(trn)
library(lubridate)
dmy("05/12/11")
julian(dmy("05/12/11"))
names(tr)
names(trn)
grep("timstamp",names(trn),val=T)
grep("timestamp",names(trn),val=T)
tr = main
ls()
